import numpy as np

# Identifies customer activity and classifies them into membership levels
membership_reference = df.groupby('Customer Name').agg({'Order ID':'count', 'Revenue':'sum'}).sort_values(['Order ID'], ascending = False)
members_stat_summary = round(membership_reference.describe(),2)
print(members_stat_summary)
print(membership_reference.corr()) #.54 correlation
max_num_orders = members_stat_summary['Order ID'][7]
max_spend = members_stat_summary['Revenue'][7]

# Histograms of count of orders and sum of revenue
sns.set()
fig, axes = plt.subplots(1,2, figsize=(18,6))
ax=sns.histplot(data=membership_reference, x = 'Order ID', bins=7, ax=axes[0]).set(title='Average Number of Orders '+ str(average_num_orders))


ax=sns.histplot(data=membership_reference, x='Revenue', ax=axes[1]).set(title='Average Spend ' + str(average_spend))
plt.axvline(x=membership_reference.Revenue.mean(),color='red')

# Identifying Outliers with the Sum of Revenue data
# Replotting the graphs
# Redefining the membership level filters

# Membership Level Classification
platinum_filter = max_spend *.9                                # Top 10% of spenders
gold_filter = max_spend*.8                                     # Top 80-90% of spenders
exclusive_filter = max_spend*.7                                # Top 70-80% of spenders
freq_shopper_filter = max_num_orders>members_stat_summary[6]   #anyone else who comes to the store frequently but does not make it to the bracket of platinum, gold, or exclusive

# Add column to original dataset

# EDA on membership data

#Membership with shipping method
#Membership by region
# Membership by state
# Membership orders over time
# Members and products they order


#To Do
#Utilize this information for promotions
#Next step, AB testing for differnet promotional campaigns.
